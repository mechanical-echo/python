<LoginWindow>:
    username: username
    password: password

    canvas.before:
        Color:
            rgba: (0.98, 0.96, 1, 1)
        Rectangle:
            pos: self.pos
            size: self.size
                
    GridLayout:
        cols: 2
        size: root.width, root.height - dp(50)
        pos: root.pos[0], root.pos[1] + dp(50)

        BoxLayout:
            orientation: 'vertical'
            size_hint_x: 0.4
            padding: dp(20)

            BoxLayout:
                orientation: 'vertical'
                size_hint_y: 0.6

                Label:
                    text: "Welcome!"
                    size_hint: 1, 0.5
                    font_size: min(root.width, root.height) * 0.08
                    color: 0.4, 0.2, 0.6, 1
                    bold: True
                    halign: 'left'
                    valign: 'center'
                    text_size: self.size

                Image:
                    source: './maxwell.gif'
                    size_hint: 1, 0.5
                    anim_delay: 0.01
                    anim_loop: 0
                    allow_stretch: True
                    keep_ratio: True

        BoxLayout:
            orientation: 'vertical'
            size_hint_x: .8
            padding: dp(20)

            BoxLayout:
                orientation: 'vertical'
                size_hint_y: 0.1

                Label:
                    text: "Username: "
                    size_hint: 1, 1
                    font_size: min(root.width, root.height) * 0.05
                    color: 0.4, 0.2, 0.6, 1
                    bold: True
                    halign: "left"
                    text_size: self.size
                    padding: [10, 15]

                RoundedTextInput:
                    id: username
                    multiline: False
                    size_hint: 1, 0.5
                    hint_text: "Enter username"
                    font_size: min(root.width, root.height) * 0.04

            BoxLayout:
                orientation: 'vertical'
                size_hint_y: 0.1

                Label:
                    text: "Password: "
                    size_hint: 1, 1
                    font_size: min(root.width, root.height) * 0.05
                    color: 0.4, 0.2, 0.6, 1
                    bold: True
                    halign: "left"
                    text_size: self.size
                    padding: [10, 15]

                RoundedTextInput:
                    id: password
                    multiline: False
                    password: True
                    size_hint: 1, 0.5
                    hint_text: "Enter password"
                    font_size: min(root.width, root.height) * 0.04

    RoundedButton:
        text: "Login"
        pos: root.width / 4, 10
        size_hint: 0.5, 0.1
        font_size: min(root.width, root.height) * 0.05
        on_press: root.login_button()
        color: 1, 1, 1, 1
        bold: True

    Label:
        text: root.status_message
        pos: [520, 0]
        size_hint: 1, 0.4
        color: root.status_color
        font_size: min(root.width, root.height) * 0.04
        bold: True

<RoundedTextInput@TextInput>:
    background_color: 0, 0, 0, 0
    halign: 'center'
    valign: 'center'
    padding_y: [self.height / 2.0 - (self.line_height / 2.0) * len(self._lines), 0]
    cursor_color: 0.4, 0.2, 0.6, 1
    cursor_width: '2sp'
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [15]
        Color:
            rgba: (0.6, 0.4, 0.8, 1) if self.focus else (0.9, 0.9, 0.9, 1)
        Line: 
            rounded_rectangle: (self.x, self.y, self.width, self.height, 15)
            width: 1.5 if self.focus else 1.2
    selection_color: 0.6, 0.4, 0.8, 0.4 

<RoundedButton@Button>:
    background_color: 0, 0, 0, 0
    cursor_name: 'hand'
    pressed: False
    r: 0.5
    g: 0.3
    b: 0.7
    canvas.before:
        Color:
            rgba: (self.r, self.g, self.b, 1) if not self.pressed else (self.r-0.1, self.g-0.1, self.b-0.1, 1)
        RoundedRectangle:
            pos: self.pos[0], self.pos[1] + (-2 if self.pressed else 0)
            size: self.size
            radius: [20]
        Color:
            rgba: (self.r-0.1, self.g-0.1, self.b-0.1, 1)
        RoundedRectangle:
            pos: self.x, (self.y - 3) if not self.pressed else (self.y - 2)
            size: self.width, self.height
            radius: [20]
    on_press:
        self.pressed = True
    on_release:
        self.pressed = False
        app.animate_button(self)

<MainWindow>:
    canvas.before:
        Color:
            rgba: (0.85, 0.95, 1, 1)
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        size: root.width, root.height

        Label:
            text: root.welcome_text
            pos_hint: {"x": 0, "top": 0.95}
            size_hint: 1, 0.15
            font_size: min(root.width, root.height) * 0.08
            color: 0.2, 0.4, 0.8, 1
            bold: True

        RoundedButton:
            text: "View Notes"
            pos_hint: {"x": 0.2, "y": 0.5}
            size_hint: 0.6, 0.1
            font_size: min(root.width, root.height) * 0.06
            on_release: root.view_notes()

        RoundedButton:
            text: "Create Note"
            pos_hint: {"x": 0.2, "y": 0.35}
            size_hint: 0.6, 0.1
            font_size: min(root.width, root.height) * 0.06
            on_release: root.create_note()

        RoundedButton:
            text: "Edit Note"
            pos_hint: {"x": 0.2, "y": 0.2}
            size_hint: 0.6, 0.1
            font_size: min(root.width, root.height) * 0.06
            on_release: root.edit_note()

        RoundedButton:
            text: "Logout"
            pos_hint: {"x": 0.2, "y": 0.05}
            size_hint: 0.6, 0.1
            font_size: min(root.width, root.height) * 0.06
            on_release: root.logout_button()

<NoteCreationWindow>:
    note_text: note_input
    
    canvas.before:
        Color:
            rgba: (0.85, 0.95, 1, 1)
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        size: root.width, root.height

        Label:
            text: "Create Note"
            pos_hint: {"x": 0, "top": 0.95}
            size_hint: 1, 0.15
            font_size: min(root.width, root.height) * 0.08
            color: 0.2, 0.4, 0.8, 1
            bold: True

        RoundedTextInput:
            id: note_input
            multiline: True
            size_hint: 0.6, 0.5
            pos_hint: {"x": 0.2, "y": 0.3}
            hint_text: "Enter your note here"
            font_size: min(root.width, root.height) * 0.04

        RoundedButton:
            text: "Save"
            pos_hint: {"x": 0.2, "y": 0.1}
            size_hint: 0.3, 0.1
            font_size: min(root.width, root.height) * 0.05
            on_release: root.save_note()

        RoundedButton:
            text: "Back"
            pos_hint: {"x": 0.5, "y": 0.1}
            size_hint: 0.3, 0.1
            font_size: min(root.width, root.height) * 0.05
            on_release: root.back_to_main()

<NotesView>:
    canvas.before:
        Color:
            rgba: (0.85, 0.95, 1, 1)
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: 'vertical'
        
        Label:
            text: "Your Notes"
            size_hint_y: .3
            font_size: min(root.width, root.height) * 0.08
            color: 0.2, 0.4, 0.8, 1
            bold: True

        ScrollView:
            do_scroll_x: False
            do_scroll_y: True
            
            canvas.before:
                Color:
                    rgba: (0.85, 0.95, 1, 1)
            
            BoxLayout:
                id: notes_container
                orientation: 'vertical'
                size_hint_y: None  # Allow the BoxLayout to expand based on its content
                height: self.minimum_height  # Set height to minimum height
                spacing: 15
                padding: [40, 10]
                

        RoundedButton:
            text: "Back"
            size_hint_y: .2
            font_size: min(root.width, root.height) * 0.05
            on_release: root.back_to_main()

<NoteItemView>:
    orientation: 'vertical'

    canvas.before:
        Color:
            rgba: (0.98, 0.96, 1, 1)
        RoundedRectangle:
            pos: self.pos
            size: root.width, 45
            radius: [15]

    Label:
        text: f"Created: {root.created_at}"
        font_size: 15
        color: 0.2, 0.4, 0.8, 1
    
    Label:
        text: root.note_text
        font_size: 15
        color: 0.2, 0.4, 0.8, 1
        bold: True

<WindowManager>:
    LoginWindow:
        name: 'login'
    MainWindow:
        name: 'main'
    NoteCreationWindow:
        name: 'note_creation'
    NotesView:
        name: 'notes_view'
